{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs26 \cf2 /*\
this is something like "the immesurable space of tones", but less liney\
*/\cf0 \
(\
z = \cf3 Server\cf0 .internal;\
\cf2 //pink noise or brown noise osc?\cf0 \
\cf3 SynthDef\cf0 (\cf4 "just-sine"\cf0 ,\{\cf3 |freq=100,freq2=50, atk=1, rel=1, sus=1, amp=0.005,pan =0,gate=0,f2=0.001|\cf0 \
	\cf3 Out\cf0 .ar(0,\cf3 Mix\cf0 .ar(\cf3 Pan2\cf0 .ar(\cf3 FSinOsc\cf0 .ar([1,1] * freq,0,amp),pan)) * \cf3 EnvGen\cf0 .ar(\cf3 Env\cf0 .perc(0.3 * atk, rel, 1, \cf5 'sine'\cf0 ),gate, doneAction:2) );\}).load(z);\
)\
~post = 0;\
z.scope;\
z.freeAll;\
(\
~i =2;\
\
~post = 0;\
5.do(\{\cf3 |k|\cf0 \
	\cf3 Routine\cf0  \{\
	([[5,6,7,8,9].wrapAt(k),6,7,8,2].product).do(\{\cf3 |i|\cf0 \
		~play.(i,k);\
		\});\
	\}.play;\
\});\
~tempo = 1;\
~play = \{\cf3 |i,k|\cf0 \
		\cf3 var\cf0  ff,p,rr;\
		i=i+2;\
		i=i.asInt;\
		p = ([12,16,18,24,32] *.x [12,16,18,24,[25,26,27,28,30].wrapAt(k),32,36]);\
		p = [p,p.sort].wrapAt(~i.log2);\
		ff = ([1,2,4,8,16,32].sort *.x p).wrapAt(i);\
		\cf2 //ff =ff  * (\{|j|j=p.wrapAt(i) +(16**4); j=2*j/j.nextPowerOfTwo\}).value(i);\cf0 \
		\cf3 Routine\cf0  \{\
		6.do(\{\cf3 |ii|\cf0 \
			\cf3 var\cf0  s, freq;\
			((i > 2).and(z.peakCPU <80)).if(\{\
			s = \cf3 Synth\cf0 (\cf4 "just-sine"\cf0 );\
			s.set(\cf5 \\amp\cf0 ,0.04 * ((i < 64 ).if(\{i.log2\},\{6\})));\
			(z.peakCPU > 85).if(\{i.postln\});	\
			freq = ff;\
			\cf2 //these harmonics are the secret sauce\cf0 \
			freq = freq * (\{\cf3 |j|\cf0 j=j+1; j=((j)*(i.factors[0].log2.floor+ 0 + ((\{|x|x\}!~i.log2.ceil.asInt)* ((~i)/~i.log2).floor.asInt.factors.reverse[0].log10.ceil).permute(i)/6).wrapAt(i+ii)+(p*4).reject(\cf3 _\cf0 <256).permute(i).wrapAt(i).nextPowerOfTwo); j/j.nextPowerOfTwo\}).value(ii);\
\
			freq = freq + (0.25 *(\{\cf3 |j|\cf0 j \}! i.log2.ceil.asInt).permute(i).wrapAt(i+ii));\
			s.set(\cf5 \\freq\cf0 ,freq);\
			s.set(\cf5 \\pan\cf0 , ((i+ii)%3) - 1);\
			s.set(\cf5 \\rel\cf0 ,((~tempo * 3) / i.factors[0].log2)*((i%11)+1));\
			s.set(\cf5 \\atk\cf0 ,((i%9)+1)*(i.log2*~tempo)/(8*i.factors[0].log2));\
			s.set(\cf5 \\sus\cf0 ,1);\
			s.set(\cf5 \\gate\cf0 ,1);\
			\
			\cf2 //smear the tones a little - wait, fade in each harmony in sequence\cf0 \
			(((3 *~tempo / i.factors[0].log2)*((i%11)+1))/6).wait;\
			\});\});\}.play;\
			\
			\cf2 //5 melodic lines, each at their own tempo, inspired by reading JLA's books\cf0 \
			(0.5 * ~tempo * (i.log2.ceil/[5,6,7,8,9].wrapAt(k))).wait;\
			~i = ~i+1;\
			(~post==1).if(\{\cf4 "k: "\cf0 .post; k.post; \cf4 "i: "\cf0 .post; i.postln; \cf4 "~i: "\cf0 .post; ~i.postln\});\
	\};\
)\
\
~post = 1;\
~post = 0;\
}